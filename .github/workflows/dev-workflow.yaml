name: Build Debug APK (Release mode)
on:
  workflow_dispatch:
    inputs:
      version:
        description: Specify Bump version
        required: true
        default: 1.0.0

  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
    types:
      - opened
      - reopened
      - synchronize

jobs:
  setup:
    name: Setup Environment
    runs-on: ${{ matrix.os }}
    env:
      APP_NAME: "Secureme"
      GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      FLUTTER_CHANNEL: "beta"
      FLUTTER_VERSION: "2.2.0"
      FLUTTER_RESTORE_KEY: ${{ matrix.os }}-flutter-install-cache-01
      NDK_RESTORE_KEY: ${{ matrix.os }}-android-ndk-21.0.6113669-v2
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            flutter_path: "$GITHUB_WORKSPACE/flutter"
            ndk_path: "/usr/local/lib/android/sdk/ndk"
    steps:
      - name: Prepare ndk dir for caching
        run: |
          sudo mkdir -p /usr/local/lib/android/sdk/ndk
          sudo chmod -R 777 /usr/local/lib/android/sdk/ndk
          sudo chown -R $USER:$USER /usr/local/lib/android/sdk/ndk

      - name: Cache Flutter Installation
        id: flutter-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-flutter-installation
        with:
          path: 'flutter'
          key: ${{ env.FLUTTER_RESTORE_KEY }}
          restore-keys: ${{ env.FLUTTER_RESTORE_KEY }}

      - name: Cache NDK Installation
        id: ndk-cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.ndk_path }}
          key: ${{ env.NDK_RESTORE_KEY }}
          restore-keys: ${{ env.NDK_RESTORE_KEY }}

      - name: Install Flutter Channel ${{ env.FLUTTER_CHANNEL }}-${{ env.FLUTTER_VERSION }}
        if: steps.flutter-cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: 'flutter/flutter'
          ref: ${{ env.FLUTTER_CHANNEL }}
          path: 'flutter'
          fetch-depth: 0

      - name: Set up Java Environment
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install NDK
        if: steps.ndk-cache.outputs.cache-hit != 'true'
        run: echo "y" | sudo ${ANDROID_SDK_ROOT}/tools/bin/sdkmanager --install "ndk;21.0.6113669"

  
  build:
    name: Build APK
    runs-on: ${{ matrix.os }}
    needs: setup
    env:
      APP_NAME: "Secureme"
      GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      FLUTTER_CHANNEL: "beta"
      FLUTTER_VERSION: "2.2.0"
      FLUTTER_RESTORE_KEY: ${{ matrix.os }}-flutter-install-cache-01
      NDK_RESTORE_KEY: ${{ matrix.os }}-android-ndk-21.0.6113669-v2
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            flutter_path: "$GITHUB_WORKSPACE/flutter"
            app_path: "$GITHUB_WORKSPACE/app"
            ndk_path: "/usr/local/lib/android/sdk/ndk"
    steps:
      - name: Prepare ndk dir for restoring
        run: |
          sudo mkdir -p /usr/local/lib/android/sdk/ndk
          sudo chmod -R 777 /usr/local/lib/android/sdk/ndk
          sudo chown -R $USER:$USER /usr/local/lib/android/sdk/ndk

      - name: Restore Flutter Cache
        id: flutter-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-flutter-installation
        with:
          path: 'flutter'
          key: ${{ env.FLUTTER_RESTORE_KEY }}
          restore-keys: ${{ env.FLUTTER_RESTORE_KEY }}

      - name: Restore NDK Cache
        id: ndk-cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.ndk_path }}
          key: ${{ env.NDK_RESTORE_KEY }}
          restore-keys: ${{ env.NDK_RESTORE_KEY }}

      - name: Add Flutter to the PATH for Unix
        if: startsWith(matrix.os, 'macOS') || startsWith(matrix.os, 'ubuntu')
        run: |
          echo "${{ matrix.flutter_path }}" >> $GITHUB_PATH
          echo "${{ matrix.flutter_path }}/bin" >> $GITHUB_PATH
      
      - name: Add Flutter to the PATH for Windows
        if: startsWith(matrix.os, 'windows')
        run: echo "${env:GITHUB_WORKSPACE}\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Checkout to ${{ env.APP_NAME }} Repository
        uses: actions/checkout@v2
        with:
          # path: 'app'
          fetch-depth: 0
      
      - name: Run Pre-build scipts
        run: |
          flutter doctor -v
          flutter pub get
          # flutter test
        # working-directory: app

      - name: Build Android APK
        run: |
          flutter build apk -t lib/main.dart --release --target-platform android-arm,android-arm64 --split-per-abi  --flavor=prod --obfuscate --split-debug-info=./build/app/outputs/apk/obfuscation --dart-define=BUILD_NUMBER=$BUILD_NUMBER --dart-define=BUILD_VERSION=$BUILD_VERSION --dart-define=BUILD_COMMIT=$FCI_COMMIT
        # working-directory: app

      - name: Show output path
        run: |
          ls ${{ env.GITHUB_WORKSPACE }}/build
          echo "===============>>>>>>>>>>><<<?????????????????/////////////#######################"
          ls ${{ env.GITHUB_WORKSPACE }}/build/app/outputs
          echo "===============>>>>>>>>>>><<<?????????????????/////////////#######################"
          ls ${{ env.GITHUB_WORKSPACE }}/build/app/outputs/apk
          echo "===============>>>>>>>>>>><<<?????????????????/////////////#######################"
          ls ${{ env.GITHUB_WORKSPACE }}/build/app/outputs/apk/release
        # working-directory: app

      # - name: Archive Build Artifact
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: Android APK (app-armeabi-v7a arch)
      #     path: /home/runner/work/secureme/secureme/
      #     if-no-files-found: error
      #     retention-days: 2


  # bump-version:
  #   name: Perform version bump
  #   needs: build
  #   runs-on: ubuntu-latest
  #   env:
  #     APP_NAME: "Secureme"
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   steps:
  #     - name: Fetch Repo HEAD
  #       uses: actions/checkout@master
  #       with:
  #         fetch-depth: 0

  #     - name: Download Build Artifact
  #       uses: actions/download-artifact@master
  #       with:
  #         name: ${{ env.APP_NAME }}-apk-artifact
  #         path: /home/runner/work/secureme/secureme
  #         if-no-files-found: error

  #     # - name: Bump version and push tag
  #     #   id: bump_tag
  #     #   uses: mathieudutour/github-tag-action@v4.5
  #     #   with:
  #     #     release_branches: .*
  #     #     github_token: ${{ env.GITHUB_TOKEN }}

  #     # - name: Push new version to Release Tags
  #     #   uses: ncipollo/release-action@v1
  #     #   with:
  #     #     name: ${{ env.APP_NAME }}-${{ steps.bump_tag.outputs.new_version }}
  #     #     tag: ${{ steps.bump_tag.outputs.new_tag }}
  #     #     token: ${{ env.GITHUB_TOKEN }}
  #     #     body: A new release of ${{ env.APP_NAME }} is available!
  #     #     allowUpdates: false
  #     #     omitName: false
  #     #     omitBody: false
