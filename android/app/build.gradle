def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def devStoreFile = keystoreProperties.getProperty('debug.file')
def devStorePassword = keystoreProperties.getProperty('debug.storePassword')
def devKeyAlias = keystoreProperties.getProperty('debug.alias')
def devKeyPassword = keystoreProperties.getProperty('debug.keyPassword')

def prodStoreFile = keystoreProperties.getProperty('prod.file')
def prodStorePassword = keystoreProperties.getProperty('prod.storePassword')
def prodKeyAlias = keystoreProperties.getProperty('prod.alias')
def prodKeyPassword = keystoreProperties.getProperty('prod.keyPassword')

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        checkReleaseBuilds false
        // abortOnError false
    }

    defaultConfig {
        applicationId "com.app.secureme"
        minSdkVersion 21
        targetSdkVersion 30
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        dev {
            storeFile rootProject.file(devStoreFile)
            storePassword devStorePassword
            keyAlias devKeyAlias
            keyPassword devKeyPassword
        }
        prod {
            storeFile rootProject.file(prodStoreFile)
            storePassword prodStorePassword
            keyAlias prodKeyAlias
            keyPassword prodKeyPassword
        }
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "app"

    productFlavors {
        dev {
            dimension "app"
            versionNameSuffix "-dev"
            applicationIdSuffix ".dev"
            signingConfig signingConfigs.dev
        }
        prod {
            dimension "app"
            signingConfig signingConfigs.prod
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation platform('com.google.firebase:firebase-bom:28.1.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
